pipeline {
    agent any
        stages {
            stage ('Build') {
                    steps {
                        echo 'Running build phase. '
                        sh   'python file1.py'
                    }
                }
           stage('Test'){
               steps{
                echo 'Run Tests'
                sh  'python tests/test_file1.py'
                     }
                }
           stage("Report"){
                 steps {
                    echo "Code Coverage"
                    sh  '''
                            coverage run tests/test_file1.py
                            coverage report
                            coverage xml -o tests/reports/coverage.xml
                        '''
                        }
                 post{
                always{
                    step([$class: 'CoberturaPublisher',
                                   autoUpdateHealth: false,
                                   autoUpdateStability: false,
                                   coberturaReportFile: 'tests/reports/coverage.xml',
                                   failNoReports: false,
                                   failUnhealthy: false,
                                   failUnstable: false,
                                   maxNumberOfBuilds: 10,
                                   onlyStable: false,
                                   sourceEncoding: 'ASCII',
                                   zoomCoverageChart: false])
                }
            }
        }
    }
}

     sh 'export PYTHONPATH="${PYTHONPATH}:/natural_language_processing"'
                        }
                    steps {
                        echo 'Running build phase. '
                        sh   '''python natural_language_processing/data/start_data_pipeline.py
                                python natural_language_processing/model/model.py'
                               '''
                        }